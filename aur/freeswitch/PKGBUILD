#-------------------------------------------------------------------------------
# Maintained by phR0ze
# credit to Brent Saner <r00t (at) square-r00t (dot) net>
# for the inspiration here https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=freeswitch
#-------------------------------------------------------------------------------
pkgname=freeswitch
pkgver=1.6.17
pkgrel=1
pkgdesc="Cross-Platform Scalable FREE Multi-Protocol Soft Switch"
arch=('i686' 'x86_64')
url="http://freeswitch.org/"
license=('MPL')
depends=('curl' 'xz' 'python' 'libtheora' 'unixodbc' 'libvorbis' 'speex' 'libjpeg-turbo'
    'postgresql-libs' 'libshout' 'lua' 'openssl-1.0' 'opus' 'freetype2')
makedepends=('git' 'libjpeg' 'ldns' 'libedit' 'curl' 'python2' 'unixodbc' 'sed' 'make'
    'yasm' 'mpg123' 'lame' 'libsndfile')
provides=('freeswitch')

source=("git+https://freeswitch.org/stash/scm/fs/freeswitch.git#tag=v${pkgver}"
        'freeswitch.service'
        'addprefix.py'
        'freeswitch.xml'
        'freeswitch-arch.patch')
md5sums=('SKIP'
         'SKIP'
         'SKIP'
         'SKIP'
         'SKIP')

install=freeswitch.install

# Minimal modules for a Google/Callcentric/Linksys solution
modules=(
  #applications/mod_callcenter
  applications/mod_commands
  #applications/mod_conference
  applications/mod_db
  applications/mod_dptools
  applications/mod_enum
  applications/mod_esf
  applications/mod_expr
  applications/mod_fifo
  applications/mod_fsv
  applications/mod_hash
  applications/mod_httapi
  applications/mod_sms
  applications/mod_spandsp
  #applications/mod_valet_parking
  #applications/mod_voicemail
  #codecs/mod_amr
  #codecs/mod_b64
  codecs/mod_g723_1
  codecs/mod_g729
  #codecs/mod_h26x
  #codecs/mod_opus
  dialplans/mod_dialplan_xml
  #endpoints/mod_loopback
  #endpoints/mod_rtc
  #endpoints/mod_skinny
  endpoints/mod_sofia
  #endpoints/mod_verto
  event_handlers/mod_cdr_csv
  event_handlers/mod_cdr_sqlite
  event_handlers/mod_event_socket
  formats/mod_local_stream
  formats/mod_native_file
  formats/mod_png
  #formats/mod_shout
  formats/mod_sndfile
  formats/mod_tone_stream
  #languages/mod_lua
  loggers/mod_console
  loggers/mod_logfile
  loggers/mod_syslog
  say/mod_say_en
  xml_int/mod_xml_cdr
  xml_int/mod_xml_curl
  xml_int/mod_xml_rpc
  xml_int/mod_xml_scgi
#  #applications/mod_callcenter        # Inbound call queueing system
#  applications/mod_commands           # CORE: Handles console commands
#  #applications/mod_conference        # Conference call support
#  #applications/mod_db                # API and dialplan interface to various database backends
#  applications/mod_dptools            # CORE: Dialplan applications for XML dialplans
#  #applications/mod_enum              # Number mapping allowing Freeswitch servers to communicate directly
#  #applications/mod_esf               # Multicast support for SIP
#  applications/mod_expr               # Dialplan support for expressions
#  #applications/mod_fifo              # Callcenter application for queuing
#  #applications/mod_fsv               # Record and play back video
#  #applications/mod_hash              # Limited datastore backend for dialplan
#  applications/mod_httapi             # Needed to read files in dialplan
#  #applications/mod_sms               # Chat protocol for messaging
#  applications/mod_spandsp            # Standard digital processing functions
#  #applications/mod_valet_parking     # Callwaiting and hold type functionalilty
#  #applications/mod_voicemail         # Using Google Voice for voicemail
#  #codecs/mod_amr                     # g711 is the only codec Callcentric/Google/RT31P2 all share
#  #codecs/mod_b64                     # g711 is the only codec Callcentric/Google/RT31P2 all share
#  codecs/mod_g711                     # Common denominator of Callcentric/Google/RT31P2
#  #codecs/mod_g723_1                  # g711 is the only codec Callcentric/Google/RT31P2 all share
#  #codecs/mod_g729                    # g711 is the only codec Callcentric/Google/RT31P2 all share
#  #codecs/mod_h26x                    # g711 is the only codec Callcentric/Google/RT31P2 all share
#  #codecs/mod_opus                    # g711 is the only codec Callcentric/Google/RT31P2 all share
#  #dialplans/mod_dialplan_asterisk    # Use the xml dialplan and you won't need this
#  dialplans/mod_dialplan_xml          # CORE: Standard xml dialplan support
#  endpoints/mod_dingaling             # Google voice/gmail calling support
#  endpoints/mod_sofia                 # Support for SIP endpoints e.g. Callcentric, Linksys RT31P2
#  #endpoints/mod_loopback             # Useful in some dialplans, I haven't ever used it
#  #endpoints/mod_rtc                  # Media streaming portion of WebRTC support
#  #endpoints/mod_skinny               # ToIP protocol used in Cisco IP Phones e.g. 79xx series
#  #endpoints/mod_verto                # Signaling portion of WebRTC support
#  #event_handlers/mod_cdr_csv         # Don't need any call logs as using Google Voice for this
#  #event_handlers/mod_cdr_sqlite      # Don't need any call logs as using Google Voice for this
#  event_handlers/mod_event_socket     # Required fro FS CLI to work correctly
#  formats/mod_local_stream            #
#  formats/mod_native_file             #
#  formats/mod_png                     #
#  formats/mod_sndfile                 # Provides support for playing sounds
#  formats/mod_tone_stream             # Adds ability to play tone streams for number pressing etc..
#  #languages/mod_lua                  # Removed: Use python module instead much easier
## languages/mod_ruby                # Added: Better scripting language that lua
#  loggers/mod_console                 # Console logger used for debugging
#  loggers/mod_logfile                 # File logger used for debugging
#  #loggers/mod_syslog                 # Don't need syslog, no need to centrally collect logs
#  say/mod_say_en                      # English speech management and voice prompting
#  xml_int/mod_xml_cdr                 #
#  xml_int/mod_xml_rpc                 #
#  xml_int/mod_xml_scgi                #
)

prepare()
{
 cd $srcdir/$pkgname

  msg "Bootstrapping..."
  ./bootstrap.sh ${_concurrent} > /dev/null
  #./bootstrap.sh

  msg "Configuring modules..."
  echo '#Minimal modules Google/Callcentric solution' > modules.conf
  for x in ${modules[@]}; do
    msg2 "Enabling module '$x'"
    echo $x >> modules.conf
  done

  # Configure FreeSWITCH
  # srtp        // Encryption for rtp, google doesn't support so why bother
  # libvpx      // Don't need anything but g711/P
  # libyuv      // Don't need video support
  PKG_CONFIG_PATH=/usr/lib/openssl-1.0/pkgconfig ./configure \
    --prefix=/var/lib/freeswitch \
    --with-python=/usr/bin/python2 \
    --disable-srtp \
    --disable-libvpx \
    --disable-libyuv \
    --enable-core-odbc-support \
    --disable-core-pgsql-support \
    --bindir=/usr/bin \
    --sbindir=/usr/sbin \
    --localstatedir=/var \
    --sysconfdir=/etc \
    --datarootdir=/usr/share \
    --libexecdir=/usr/lib/freeswitch \
    --libdir=/usr/lib/freeswitch \
    --includedir=/usr/include/freeswitch \
    --with-recordingsdir=/var/spool/freeswitch/recordings \
    --with-dbdir=/var/spool/freeswitch/db \
    --with-pkgconfigdir=/usr/lib/pkgconfig \
    --with-logfiledir=/var/log/freeswitch \
    --with-modinstdir=/usr/lib/freeswitch/mod \
    --with-scriptdir=/usr/share/freeswitch/scripts \
    --with-certsdir=/etc/freeswitch/certs \
    --with-rundir=/run/freeswitch

    # Patch required for 1.6.17
    patch -Np1 < ../freeswitch-arch.patch
}

build()
{
  cd $srcdir/$pkgname

  # Not multi-thread capable
  msg "Building FreeSWITCH"
  make

#    # Download FreeSWITCH sounds
#    msg "Downloading FreeSWITCH sounds"
#    make cd-sounds
#    make cd-moh
#    msg "Downloading FreeSWITCH sounds complete"
}

# Install files into fakeroot and package
#-------------------------------------------------------------------------------
package()
{
    cd $srcdir
#    # Configure use of Python 2.x as FreeSWITCH doesn't work with Python 3.x
#    msg "Configure Python 2.x"
#    mkdir -p /var/tmp/bin
#    ln -s /usr/bin/python2 /var/tmp/bin/python
#    PATH="/var/tmp/bin:${PATH}"
#
#    # Change directory to source directory inside src and install to fakeroot
#    msg "Installing FreeSWITCH to fakeroot"
#    cd "${pkgname}"
#    make DESTDIR=${pkgdir} install
#    msg "Completed installing FreeSWITCH to fakeroot"
#
#    # Clean up
#    PATH=${_pathorig}
#    rm -rf /var/tmp/bin
#    msg "Cleaning up Python 2.x config"
#
#    # Removing un-needed or incorrect files
#    msg2 "Removing uneeded or incorrect files"
#    rm -rf ${pkgdir}/etc/${pkgname}/*
#    rm -rf ${pkgdir}/var/run
#    rm -rf ${pkgdir}${prefix}/include
#    rm -rf ${pkgdir}${prefix}/lib/pkgconfig
#
#    # Create directories and install files manually
#    msg "Configuring manual install additions"
#    msg2 "Creating needed directories for install"
#    mkdir -p ${pkgdir}${prefix}/certs
#    mkdir -p ${pkgdir}${prefix}/sounds
#    mkdir -p ${pkgdir}${prefix}/storage
#
#    msg2 "Installing FreeSWITCH Sounds"
#    for x in `ls ${srcdir}/${pkgname}/*.tar.gz`; do
#        tar xzf "${x}" -C "${pkgdir}${prefix}/sounds"
#    done
#    msg2 "Sounds installation complete"
#
#    msg2 "Installing configuration files"
#    install -D -m 0755 ${srcdir}/addprefix.py ${pkgdir}${prefix}/scripts/addprefix.py
#    install -D -m 0644 ${srcdir}/freeswitch.xml ${pkgdir}/etc/${pkgname}/freeswitch.xml
#    install -D -m 0644 ${srcdir}/freeswitch.service ${pkgdir}/usr/lib/systemd/system/freeswitch.service
#
#    msg2 "Configuration file installation conplete"
#    msg "Completed manual install additions"
} 

# vim: ts=2:sw=2:sts=2
